{"ast":null,"code":"/**\n * Created by Oakley Hall on 6/23/15.\n */\n'use strict';\n\nmodule.exports = function () {\n  var pi = Math.PI;\n  var context = this._context;\n  var state = this.state;\n  var props = this.props;\n\n  var player = this._player();\n\n  var score = this._score;\n\n  var ai = this._ai();\n\n  var that = this;\n  var r = Math.random();\n  return {\n    serve: function serve(side) {\n      var phi = 0.1 * pi * (1 - 2 * r);\n      that.setState({\n        ballx: side === 1 ? state.playerx + props.paddleWidth : state.aix - props.ballSize,\n        bally: (props.height - props.ballSize) * r,\n        velx: state.ballSpeed * Math.cos(phi) * side,\n        vely: state.ballSpeed * Math.sin(phi)\n      });\n    },\n    update: function update() {\n      var bx = state.ballx;\n      var by = state.bally;\n      var vx = state.velx;\n      var vy = state.vely;\n      that.setState({\n        ballx: bx + vx,\n        bally: by + vy\n      });\n\n      if (0 > by || by + props.ballSize > props.height) {\n        var offset = state.vely < 0 ? 0 - state.bally : props.height - (state.bally + props.ballSize);\n        that.setState({\n          bally: by + 2 * offset,\n          vely: vy * -1\n        });\n      }\n\n      var pdle = state.velx < 0 ? player : ai;\n\n      var AABBIntersect = function AABBIntersect(paddleX, paddleY, pWidth, pHeight, bx, by, bw, bh) {\n        return paddleX < bx + bw && paddleY < by + bh && bx < paddleX + pWidth && by < paddleY + pHeight;\n      };\n\n      if (AABBIntersect(pdle.position().x, pdle.position().y, props.paddleWidth, props.paddleHeight, state.ballx, state.bally, props.ballSize, props.ballSize)) {\n        var dir = state.velx < 0 ? 1 : -1;\n        var n = (state.bally + props.ballSize - pdle.position().y) / (props.paddleHeight + props.ballSize);\n        var ydir = (n > 0.5 ? -1 : 1) * dir;\n        var phi = 0.25 * pi * (2 * n + dir) + r;\n        var smash = Math.abs(phi) > 0.2 * pi ? 1.1 : 1;\n        that.setState({\n          ballx: pdle === player ? state.playerx + props.paddleWidth : state.aix - props.ballSize,\n          velx: smash * -1 * state.velx,\n          vely: smash * ydir * state.velx * Math.sin(phi)\n        });\n      }\n\n      if (0 > state.ballx + props.ballSize || state.ballx > props.width) {\n        score(pdle.name());\n        this.serve(pdle.name() === player.name() ? 1 : -1);\n      }\n    },\n    draw: function draw() {\n      context.beginPath();\n      context.arc(state.ballx, state.bally, props.ballSize, 0, 2 * Math.PI);\n      context.fill();\n      context.lineWidth = 0;\n      context.strokeStyle = '#fff';\n      context.stroke();\n    }\n  };\n};","map":null,"metadata":{},"sourceType":"script"}