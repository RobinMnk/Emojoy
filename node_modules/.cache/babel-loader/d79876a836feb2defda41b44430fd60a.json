{"ast":null,"code":"/**\n * Created by Oakley Hall on 6/19/15.\n */\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    'default': obj\n  };\n}\n\nfunction _defineProperty(obj, key, value) {\n  return Object.defineProperty(obj, key, {\n    value: value,\n    enumerable: true,\n    configurable: true,\n    writable: true\n  });\n}\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _lodash = require('lodash');\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nexports['default'] = _react2['default'].createClass({\n  displayName: 'pong',\n  propTypes: {\n    height: _react2['default'].PropTypes.number,\n    width: _react2['default'].PropTypes.number,\n    upArrow: _react2['default'].PropTypes.number,\n    downArrow: _react2['default'].PropTypes.number,\n    ballSize: _react2['default'].PropTypes.number,\n    paddleHeight: _react2['default'].PropTypes.number,\n    paddleWidth: _react2['default'].PropTypes.number,\n    paddleSpeed: _react2['default'].PropTypes.number\n  },\n  getDefaultProps: function getDefaultProps() {\n    return {\n      height: 600,\n      width: 700,\n      upArrow: 38,\n      downArrow: 40,\n      paddleHeight: 100,\n      paddleWidth: 20,\n      paddleSpeed: 5,\n      ballSize: 10\n    };\n  },\n  getInitialState: function getInitialState() {\n    return {\n      ballx: 100,\n      bally: 100,\n      ballSpeed: 2,\n      velx: 0,\n      vely: 0,\n      aix: 670,\n      aiy: 100,\n      playerx: 10,\n      playery: 100,\n      playerScore: 0,\n      aiScore: 0\n    };\n  },\n  componentDidMount: function componentDidMount() {\n    this._setupCanvas();\n\n    this._context.font = '30px Arial';\n\n    this._context.fillText('Starting Game', this.props.width / 2, this.props.height / 2);\n\n    setTimeout(this._startGame, 1000);\n  },\n  _keystate: {},\n  _canvas: undefined,\n  _context: undefined,\n  _ball: require('./ball'),\n  _player: require('./player'),\n  _ai: require('./ai'),\n  _loop: null,\n  _canvasStyle: {\n    display: 'block',\n    position: 'absolute',\n    margin: 'auto',\n    top: '0',\n    bottom: '0',\n    left: '0',\n    right: '0'\n  },\n  _startGame: function _startGame() {\n    var _this = this;\n\n    if (this._loop) {\n      return;\n    }\n\n    var keystate = this._keystate;\n    document.addEventListener('keydown', function (evt) {\n      keystate[evt.keyCode] = true;\n    });\n    document.addEventListener('keyup', function (evt) {\n      delete keystate[evt.keyCode];\n    });\n    document.addEventListener('ontouchstart', function (e) {\n      e.preventDefault();\n    }, false);\n    document.addEventListener('ontouchmove', function (e) {\n      e.preventDefault();\n    }, false);\n    this._loop = setInterval(function () {\n      _this._update();\n\n      _this._draw();\n    }, 1);\n\n    this._ball().serve(1);\n  },\n  _stopGame: function _stopGame() {\n    var _this2 = this;\n\n    clearInterval(this._loop);\n    this._loop = null;\n    setTimeout(function () {\n      _this2._context.clearRect(0, 0, _this2._canvas.width, _this2._canvas.height);\n    }, 0);\n  },\n  _setupCanvas: function _setupCanvas() {\n    this._canvas = this.getDOMNode();\n    this._context = this._canvas.getContext('2d');\n  },\n  _score: function _score(name) {\n    var _this3 = this;\n\n    var state = this.state;\n    var scorer = {\n      player: 'ai',\n      ai: 'player'\n    }[name];\n    this.setState(_defineProperty({}, scorer + 'Score', state[scorer + 'Score'] + 1));\n\n    this._stopGame();\n\n    setTimeout(function () {\n      _this3._context.font = '30px Arial';\n\n      _this3._context.fillText(scorer + ' score!', _this3.props.width / 2, _this3.props.height / 2);\n\n      _this3._context.restore();\n    }, 0);\n    setTimeout(function () {\n      _this3._setupCanvas();\n\n      _this3._startGame();\n    }, 1000);\n  },\n  _draw: function _draw() {\n    // draw background\n    var state = this.state;\n\n    this._context.fillRect(0, 0, this.props.width, this.props.height);\n\n    this._context.save();\n\n    this._context.fillStyle = '#fff'; // draw scoreboard\n\n    this._context.font = '10px Arial';\n\n    this._context.fillText('Player: ' + state.playerScore, 10, 10);\n\n    this._context.fillText('CPU: ' + state.aiScore, 500, 10); //draw ball\n\n\n    this._ball().draw(); //draw paddles\n\n\n    this._player().draw();\n\n    this._ai().draw(); // draw the net\n\n\n    var w = 4;\n    var x = (this.props.width - w) * 0.5;\n    var y = 0;\n    var step = this.props.height / 20; // how many net segments\n\n    while (y < this.props.height) {\n      this._context.fillRect(x, y + step * 0.25, w, step * 0.5);\n\n      y += step;\n    }\n\n    this._context.restore();\n  },\n  _update: function _update() {\n    this._player().update();\n\n    this._ai().update();\n\n    this._ball().update();\n  },\n  _touch: function _touch(evt) {\n    console.log(evt);\n    var yPos = evt.touches[0].pageY - evt.touches[0].target.offsetTop - this.props.paddleHeight / 2;\n\n    this._player().position(yPos);\n  },\n  render: function render() {\n    return _react2['default'].createElement('canvas', {\n      onTouchStart: this._touch,\n      onTouchMove: this._touch,\n      style: this._canvasStyle,\n      width: this.props.width,\n      height: this.props.height\n    });\n  }\n});\nmodule.exports = exports['default'];","map":null,"metadata":{},"sourceType":"script"}