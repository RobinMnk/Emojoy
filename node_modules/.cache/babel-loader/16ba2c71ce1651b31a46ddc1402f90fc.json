{"ast":null,"code":"var _jsxFileName = \"/Users/berzanmikaili/Developer/hackatum2019/hackaTUM2019/src/components/PracticeEasy.tsx\";\nimport React from 'react';\nimport FaceAPI from \"./faceapi\";\nimport { Row, Typography, Button } from \"antd\";\nconst Title = Typography.Title;\n\nconst emotion2emoji = emotion => {\n  switch (emotion) {\n    case \"neutral\":\n      return \"😐\";\n\n    case \"happy\":\n      return \"😄\";\n\n    case \"sad\":\n      return \"😞\";\n\n    case \"surprised\":\n      return \"😯\";\n\n    case \"angry\":\n      return \"😠\";\n\n    case \"disgusted\":\n      return \"🤮\";\n\n    case \"fearful\":\n      return \"😬\";\n\n    default:\n      return \"😐\";\n  }\n};\n\nexport class PracticeEasy extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      emotionTask: \"neutral\",\n      correctness: false,\n      started: false,\n      ready: false\n    };\n  }\n\n  setEmotion(emotion) {\n    this.setState({\n      currentEmotion: emotion,\n      correctness: emotion === this.state.emotionTask\n    });\n  }\n\n  componentDidUpdate() {\n    let newTask;\n\n    if (this.state.correctness) {\n      if (this.state.emotionTask === \"neutral\") {\n        const emotions = ['happy', 'sad', 'surprised', 'angry'];\n        newTask = emotions[Math.floor(Math.random() * emotions.length)];\n      } else {\n        newTask = \"neutral\";\n      }\n\n      console.log(\"Switching from \".concat(this.state.emotionTask, \" to \").concat(newTask));\n      setTimeout(() => {\n        this.setState({\n          emotionTask: newTask,\n          correctness: false\n        });\n      }, 1);\n    }\n  }\n\n  shuffle() {\n    this.setState({\n      emotionTask: \"neutral\",\n      correctness: true\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      style: {\n        marginBottom: \"30\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(Row, {\n      type: \"flex\",\n      justify: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(Title, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, \"Learning Emotions\")), !this.state.started ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(Row, {\n      type: \"flex\",\n      justify: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, \"In this step you are going to practice emotional facial expressions. Press start and have fun!\")), React.createElement(Row, {\n      type: \"flex\",\n      justify: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: () => this.setState({\n        started: true\n      }),\n      type: \"primary\",\n      loading: !this.state.ready,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, this.state.ready ? \"Start\" : \"Loading\"))) : null, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(FaceAPI, {\n      setEmotion: em => this.setEmotion(em),\n      onRunning: () => this.setState({\n        ready: true\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    })), this.state.started ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(Row, {\n      type: \"flex\",\n      justify: \"space-around\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(Title, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, \"Try to look \", this.state.emotionTask, \" - \", emotion2emoji(this.state.emotionTask))), React.createElement(Row, {\n      type: \"flex\",\n      justify: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: () => this.shuffle(),\n      type: \"primary\",\n      size: \"large\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, \"Skip\"))) : null);\n  }\n\n}\n\nconst introductionText = () => {\n  return;\n};","map":{"version":3,"sources":["/Users/berzanmikaili/Developer/hackatum2019/hackaTUM2019/src/components/PracticeEasy.tsx"],"names":["React","FaceAPI","Row","Typography","Button","Title","emotion2emoji","emotion","PracticeEasy","Component","constructor","props","state","emotionTask","correctness","started","ready","setEmotion","setState","currentEmotion","componentDidUpdate","newTask","emotions","Math","floor","random","length","console","log","setTimeout","shuffle","render","marginBottom","em","introductionText"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAiC,WAAjC;AACA,SAASC,GAAT,EAAcC,UAAd,EAA0BC,MAA1B,QAAwC,MAAxC;MACQC,K,GAAUF,U,CAAVE,K;;AAaR,MAAMC,aAAa,GAAIC,OAAD,IAAkC;AACpD,UAAQA,OAAR;AACI,SAAK,SAAL;AACI,aAAO,IAAP;;AACJ,SAAK,OAAL;AACI,aAAO,IAAP;;AACJ,SAAK,KAAL;AACI,aAAO,IAAP;;AACJ,SAAK,WAAL;AACI,aAAO,IAAP;;AACJ,SAAK,OAAL;AACI,aAAO,IAAP;;AACJ,SAAK,WAAL;AACI,aAAO,IAAP;;AACJ,SAAK,SAAL;AACI,aAAO,IAAP;;AACJ;AACI,aAAO,IAAP;AAhBR;AAkBH,CAnBD;;AAoBA,OAAO,MAAMC,YAAN,SAA2BR,KAAK,CAACS,SAAjC,CAA2D;AAC9DC,EAAAA,WAAW,CAACC,KAAD,EAA0B;AACjC,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AAAEC,MAAAA,WAAW,EAAE,SAAf;AAA0BC,MAAAA,WAAW,EAAE,KAAvC;AAA8CC,MAAAA,OAAO,EAAE,KAAvD;AAA8DC,MAAAA,KAAK,EAAE;AAArE,KAAb;AACH;;AACDC,EAAAA,UAAU,CAACV,OAAD,EAAmB;AACzB,SAAKW,QAAL,CAAc;AACVC,MAAAA,cAAc,EAAEZ,OADN;AAEVO,MAAAA,WAAW,EAAEP,OAAO,KAAK,KAAKK,KAAL,CAAWC;AAF1B,KAAd;AAIH;;AACDO,EAAAA,kBAAkB,GAAG;AACjB,QAAIC,OAAJ;;AACA,QAAI,KAAKT,KAAL,CAAWE,WAAf,EAA4B;AACxB,UAAI,KAAKF,KAAL,CAAWC,WAAX,KAA2B,SAA/B,EAA0C;AACtC,cAAMS,QAAmB,GAAG,CAAC,OAAD,EAAU,KAAV,EAAiB,WAAjB,EAA8B,OAA9B,CAA5B;AACAD,QAAAA,OAAO,GAAGC,QAAQ,CAACC,IAAI,CAACC,KAAL,CAAYD,IAAI,CAACE,MAAL,KAAgBH,QAAQ,CAACI,MAArC,CAAD,CAAlB;AACH,OAHD,MAGO;AACHL,QAAAA,OAAO,GAAG,SAAV;AACH;;AACDM,MAAAA,OAAO,CAACC,GAAR,0BAA8B,KAAKhB,KAAL,CAAWC,WAAzC,iBAA2DQ,OAA3D;AACAQ,MAAAA,UAAU,CAAC,MAAM;AACb,aAAKX,QAAL,CAAc;AAAEL,UAAAA,WAAW,EAAEQ,OAAf;AAAwBP,UAAAA,WAAW,EAAE;AAArC,SAAd;AACH,OAFS,EAEP,CAFO,CAAV;AAGH;AACJ;;AACDgB,EAAAA,OAAO,GAAG;AACN,SAAKZ,QAAL,CAAc;AAAEL,MAAAA,WAAW,EAAE,SAAf;AAA0BC,MAAAA,WAAW,EAAE;AAAvC,KAAd;AACH;;AACDiB,EAAAA,MAAM,GAAG;AACL,WAAO;AAAK,MAAA,KAAK,EAAE;AAACC,QAAAA,YAAY,EAAE;AAAf,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACH,oBAAC,GAAD;AAAK,MAAA,IAAI,EAAC,MAAV;AAAiB,MAAA,OAAO,EAAC,QAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADJ,CADG,EAIF,CAAC,KAAKpB,KAAL,CAAWG,OAAZ,GAAsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK,oBAAC,GAAD;AAAK,MAAA,IAAI,EAAC,MAAV;AAAiB,MAAA,OAAO,EAAC,QAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAkC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wGAAlC,CAAL,EAInB,oBAAC,GAAD;AAAK,MAAA,IAAI,EAAC,MAAV;AAAiB,MAAA,OAAO,EAAC,QAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,MAAD;AACA,MAAA,OAAO,EAAE,MAAM,KAAKG,QAAL,CAAc;AAAEH,QAAAA,OAAO,EAAE;AAAX,OAAd,CADf;AAEA,MAAA,IAAI,EAAC,SAFL;AAGA,MAAA,OAAO,EAAE,CAAC,KAAKH,KAAL,CAAWI,KAHrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIE,KAAKJ,KAAL,CAAWI,KAAX,GAAmB,OAAnB,GAA6B,SAJ/B,CADJ,CAJmB,CAAtB,GAWQ,IAfN,EAiBH,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,OAAD;AACA,MAAA,UAAU,EAAEiB,EAAE,IAAI,KAAKhB,UAAL,CAAgBgB,EAAhB,CADlB;AAEA,MAAA,SAAS,EAAE,MAAM,KAAKf,QAAL,CAAc;AAACF,QAAAA,KAAK,EAAE;AAAR,OAAd,CAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CAjBG,EAuBF,KAAKJ,KAAL,CAAWG,OAAX,GAAqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAClB,oBAAC,GAAD;AAAK,MAAA,IAAI,EAAC,MAAV;AAAiB,MAAA,OAAO,EAAC,cAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACiB,KAAKH,KAAL,CAAWC,WAD5B,SAC4CP,aAAa,CAAC,KAAKM,KAAL,CAAWC,WAAZ,CADzD,CADJ,CADkB,EAMlB,oBAAC,GAAD;AAAK,MAAA,IAAI,EAAC,MAAV;AAAiB,MAAA,OAAO,EAAC,QAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAE,MAAM,KAAKiB,OAAL,EAAvB;AAAuC,MAAA,IAAI,EAAC,SAA5C;AAAsD,MAAA,IAAI,EAAC,OAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,CANkB,CAArB,GAQkB,IA/BhB,CAAP;AAkCH;;AAhE6D;;AAkElE,MAAMI,gBAAgB,GAAG,MAAM;AAC3B;AACH,CAFD","sourcesContent":["import React from 'react'\nimport FaceAPI, { Emotion } from \"./faceapi\";\nimport { Row, Typography, Button } from \"antd\";\nconst { Title } = Typography;\n\ninterface IProps {\n\n}\n\ninterface IState {\n    started: boolean;\n    ready: boolean;\n    currentEmotion?: Emotion;\n    emotionTask?: Emotion;\n    correctness?: boolean;\n}\nconst emotion2emoji = (emotion: Emotion | undefined) => {\n    switch (emotion) {\n        case \"neutral\":\n            return \"😐\";\n        case \"happy\":\n            return \"😄\";\n        case \"sad\":\n            return \"😞\";\n        case \"surprised\":\n            return \"😯\";\n        case \"angry\":\n            return \"😠\";\n        case \"disgusted\":\n            return \"🤮\";\n        case \"fearful\":\n            return \"😬\";\n        default:\n            return \"😐\";\n    }\n}\nexport class PracticeEasy extends React.Component<IProps, IState> {\n    constructor(props: Readonly<IProps>) {\n        super(props);\n        this.state = { emotionTask: \"neutral\", correctness: false, started: false, ready: false };\n    }\n    setEmotion(emotion: Emotion) {\n        this.setState({\n            currentEmotion: emotion,\n            correctness: emotion === this.state.emotionTask\n        });\n    }\n    componentDidUpdate() {\n        let newTask: Emotion;\n        if (this.state.correctness) {\n            if (this.state.emotionTask === \"neutral\") {\n                const emotions: Emotion[] = ['happy', 'sad', 'surprised', 'angry'];\n                newTask = emotions[Math.floor((Math.random() * emotions.length))]\n            } else {\n                newTask = \"neutral\";\n            }\n            console.log(`Switching from ${this.state.emotionTask} to ${newTask}`)\n            setTimeout(() => {\n                this.setState({ emotionTask: newTask, correctness: false })\n            }, 1)\n        }\n    }\n    shuffle() {\n        this.setState({ emotionTask: \"neutral\", correctness: true });\n    }\n    render() {\n        return <div style={{marginBottom: \"30\"}}>\n            <Row type=\"flex\" justify=\"center\">\n                <Title>Learning Emotions</Title>\n            </Row>\n            {!this.state.started ? <div><Row type=\"flex\" justify=\"center\"><p>                \n                In this step you are going to practice emotional facial expressions. Press start and have fun!\n                </p>\n            </Row>\n                <Row type=\"flex\" justify=\"center\" >\n                    <Button\n                    onClick={() => this.setState({ started: true })}\n                    type=\"primary\"\n                    loading={!this.state.ready}\n                    >{this.state.ready ? \"Start\" : \"Loading\"}</Button>\n                </Row>\n            </div> : null\n            }\n            <Row>\n                <FaceAPI\n                setEmotion={em => this.setEmotion(em)}\n                onRunning={() => this.setState({ready: true})}\n                ></FaceAPI>\n            </Row>\n            {this.state.started ? <div>\n                <Row type=\"flex\" justify=\"space-around\">\n                    <Title>\n                        Try to look {this.state.emotionTask} - {emotion2emoji(this.state.emotionTask)}\n                    </Title>\n                </Row>\n                <Row type=\"flex\" justify=\"center\">\n                    <Button onClick={() => this.shuffle()} type=\"primary\" size=\"large\">Skip</Button>\n                </Row></div> : null\n            }\n        </div>\n    }\n}\nconst introductionText = () => {\n    return\n}\n"]},"metadata":{},"sourceType":"module"}