{"ast":null,"code":"import * as tf from '@tensorflow/tfjs-core';\nimport { TfjsImageRecognitionBase } from 'tfjs-image-recognition-base';\nimport { prelu } from './prelu';\nexport function sharedLayer(x, params, isPnet) {\n  if (isPnet === void 0) {\n    isPnet = false;\n  }\n\n  return tf.tidy(function () {\n    var out = TfjsImageRecognitionBase.convLayer(x, params.conv1, 'valid');\n    out = prelu(out, params.prelu1_alpha);\n    out = tf.maxPool(out, isPnet ? [2, 2] : [3, 3], [2, 2], 'same');\n    out = TfjsImageRecognitionBase.convLayer(out, params.conv2, 'valid');\n    out = prelu(out, params.prelu2_alpha);\n    out = isPnet ? out : tf.maxPool(out, [3, 3], [2, 2], 'valid');\n    out = TfjsImageRecognitionBase.convLayer(out, params.conv3, 'valid');\n    out = prelu(out, params.prelu3_alpha);\n    return out;\n  });\n}","map":null,"metadata":{},"sourceType":"module"}